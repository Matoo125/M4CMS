{% extends 'admin/base.twig' %}

{% block css %}
<link rel="stylesheet" href="/bower_components/trumbowyg/dist/ui/trumbowyg.min.css">
<link rel="stylesheet" href="/bower_components/jquery.tagsinput/dist/jquery.tagsinput.min.css">
{% endblock %}

{% block title %}Edit {{ post.title }} {% endblock %}

{% block breadcrumbs %}
<li class="breadcrumb-item"><a href="/admin{{ url.POSTS }}">Posts</a></li>
<li class="breadcrumb-item active">Edit</li>

{% endblock %}

{% block content %}

<!-- Edit post form -->
  <div class="row">
      <div class="col-lg-9">
          <div class="card">
              <div class="card-header">Edit Post</div>
              <div class="card-block">
                  <form method="post" action="" id="mainForm">
                      <div class="form-group">
                          <label for="inputTitle">Title</label>
                          <input type="text" class="form-control" id="title" name="title" placeholder="Title" value="{{ post.title }}" required>
                      </div>


                      <div class="form-group">
                        <label for="description">Description</label>
                        <textarea class="form-control" name="description" id="description">{{ post.description }}</textarea>
                    </div>


                      <div class="form-group">
                          <label for="inputTags">Tags</label>
                          <input type="text" class="form-control" id="tags" name="tags" placeholder="Tags" value="{{ post.tags }}" required>
                      </div>

                      <div class="form-group">
                          <label for="textareaArticleBody">Content</label>
                          <textarea class="form-control" name="content" id="textareaArticleBody">{{ post.content }}</textarea>
                      </div>


                      <button type="submit" class="btn btn-primary">Save</button>
                  </form>
              </div>
          </div>
      </div>

      <div class="col-lg-3 col-12" style="padding: 0">
        <div class="row">
          <div class="card-deck col-12">

            <div class="col-lg-12 col-6">
              <div class="card">
                <div class="card-header">Image</div>
                <div class="card-block">
                  <label>
                    <img id="currentImage" class="img-fluid" src="/uploads/thumbs/150x150/{{ post.image }}">
                    <input type="file" class="upload" id="image" hidden />
                  </label>
                </div>
              </div>
            </div>

            <div class="col-lg-12 col-6">
            <div class="card">
              <div class="card-header">Other Information</div>
              <div class="card-block" style="padding: 0">
                <table class="table" style="margin: 0">
                  <tbody>
                    <tr style="cursor: pointer;" id="getPages" data-id="{{ post.page_id }}">
                      <td>Page</td>
                      <td>{{ post.page }}</td>
                    </tr>
                    <tr style="cursor: pointer;" id="getCategories" data-id="{{ post.category_id }}" data-function="get">
                      <td>Category</td>
                      <td>{{ post.category }}</td>
                    </tr>
                    <tr style="cursor: pointer;" id="switchPublished">
                      <td>Published</td>
                      <td>{{ post.is_published ? 'Yes' : 'No' }}</td>
                    </tr>
                    <tr style="cursor: pointer;" id="getAuthors">
                      <td>Author</td>
                      <td>{{ post.author }}</td>
                    </tr>
                  </tbody>
                </table>

              </div>
            </div>
          </div>
          </div>
        </div>
      </div>
  </div>

{% endblock %}

{% block scripts %}
<script src="/bower_components/trumbowyg/dist/trumbowyg.min.js"></script>
<script src="/bower_components/trumbowyg/dist/plugins/noembed/trumbowyg.noembed.min.js"></script>
<script src="/bower_components/trumbowyg/dist/plugins/upload/trumbowyg.upload.min.js"></script>
<script src="/bower_components/jquery.tagsinput/src/jquery.tagsinput.js"></script>
<script src="/js/admin/editorSettings.js"></script>

<script type="text/javascript">
$(".loader").hide();

$(document).ready(function(){

  $("#title").change(function() {
    $(this).addClass('changed');
  });

  $("#description").change(function() {
    $(this).addClass('changed');
  });


  $("#mainForm").submit(function(e) {
    e.preventDefault();
    var formData = {}
    if ($("#title").hasClass('changed')) {
      formData.title = 'title';
    }
    if ($("#description").hasClass('changed')) {
      formData.description = 'description';
    }

    if ($("#tags").hasClass('changed')) {
      formData.tags = jQuery( '#tags' ).tagsInput()[0].value;;
    }

    if ($("#textareaArticleBody").hasClass('changed')) {
      formData.content = $('#textareaArticleBody').trumbowyg('html');
;
    }


    console.log(formData);
    $.post( "/admin/posts/editAjax", formData).done(function(data) {
      console.log('done')
    });

  });


  // get pages
  $("#getPages").parent().on('click', '#getPages', function() {
    alert('getPages');
    // get list of pages
  });

  // get categories
  $("#getCategories").parent().on('click', '#getCategories', function() {
      // get list of categories
      var selectedCategory = $(this).data('id');
      console.log(selectedCategory)
      $.post( "/admin/posts/getCategoriesAjax", { page_id: $("#getPages").data('id') })
      .done(function( data ) {
        // change id
        $("#getCategories").attr('id', 'selectCategory');
        var self = $("#selectCategory td:nth-child(2)");
        // append them to view
        $(self).html('');
        var select = $('<select class="custom-select" id="category">').appendTo(self);
        $.each(JSON.parse(data), function(key, value) {
          select.append($("<option>").attr('value',value.id).text(value.title));
        });
        $("tr#selectCategory>td>select>option[value='"+selectedCategory+"']").prop('selected', true);
        $(self).parent().attr('data-function', 'select');
      //  $(self).wrapInner('<td>')
      });

  $(document).on('change', '#category', function() {
    var selected = $(this).find(":selected").text();
    var selectedValue = $(this).find(":selected").val();
    console.log('changed to: ' + selected + " (" + selectedValue + ")")

    //

  })

  });

  // change category


  // get authors
  $("#getAuthors").click(function() {
    alert('getAuthors');
    // get list of authors
  });

  // get published
  $("#switchPublished").click(function() {
    alert('switchPublished');
    // switch published with ajax
  });

  // change image ajax
  input = $("#image").change(function(event) {
    var file = event.target.files;
    if (file) {
      //console.log(file[0]);
      // set loader
      $("#currentImage").replaceWith("<img class='loader' src='/images/loader.svg'>")

      var formData = new FormData();
      formData.append('image', file[0]);
      formData.append('id', {{ post.id }});
      $.ajax({
          type: "POST",
          url: "/admin/posts/changeImageAjax",
          data: formData,
          processData: false,
          contentType: false
      }).done(function(data){
        console.log(data)
        // replace loader with image
        $(".loader").replaceWith('<img id="currentImage" src="/uploads/thumbs/150x150/posts/'+ data +'">')
      });
    }
  });

  $("select#page").change(function(){
      $("select#category").addClass("invisible")
      $(".loader").show();
      var selectedPage = $("#page option:selected").val();
      $.ajax({
          type: "POST",
          url: "/admin/posts/getCategoriesAjax",
          data: { page_id : selectedPage }
      }).done(function(data){
        $("select#category").removeClass("invisible").html('<option value="0">Please select a Category</option>')
        $(".loader").hide();

        $.each(JSON.parse(data), function(key, value) {
          $("select#category").append("<option value='"+value.id+"'>"+value.title+"</option>");
        })
      });
  });

  $('#tags').tagsInput({
    'height':'auto',
    'width':'auto',
    'onChange': function() {
      setTimeout(function(){
        if ( jQuery( '#tags' ).tagsInput()[0].value !== '{{ post.tags }}') {
      //    console.log(jQuery( '#tags' ).tagsInput()[0].value + 'is different than ' + '{{ post.tags }}')
          $("#tags").addClass('changed');
      //    alert('changed tag')
        }
      }, 100)


    }
  });

});
</script>
{% endblock %}
